<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="saveWaveFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>